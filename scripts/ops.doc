rand:

Generate a uniform distribution.

@remarks
For a normal (Gaussian) distribution, see {@link randn}.

@example
```javascript
// 128x8 uniformly random tensor
const t = sm.rand([128, 8])
```

@param shape - The shape of the output {@link Tensor}

@returns A new {@link Tensor} of uniformly random values
---
randn:

Generate a normal (Gaussian) distribution.

@remarks
For a uniform distribution, see {@link rand}.

@example
```javascript
// 128x8 gaussian tensor
const t = sm.randn([128, 8])
```

@param shape - The shape of the output {@link Tensor}

@returns A new {@link Tensor} of random values sampled from a Gaussian distribution
---
full:

Create a {@link Tensor} filled with a single value.

@example
```javascript
// 128x8 tensor of all 1s
const t = sm.full([128, 8], 1)
```

@param shape - The shape of the output {@link Tensor}
@param val - The value used to fill the output

@returns A new {@link Tensor} of a single user specified value.
---
identity:

Create a square N-dimensional identity {@link Tensor}.

@remarks
This is similar to the `eye` API of other tensor frameworks.

@example
```javascript
// 128x128 identity tensor
const t = sm.identity(128)
```

@param dim - The dimension of the output {@link Tensor}

@returns A new identity {@link Tensor}.
---
arange:

Create a {@link Tensor} of evenly-spaced values in a given interval.

@example
```javascript
// create a tensor of even values starting with 0: `[0,2,4,8]`
const t = sm.arange(0, 10, 2)
```

@param start - The start of the interval (inclusive)
@param end - The end of the interval (exclusive)
@param step - An optional argument to stride the interval

@returns A new 1D {@link Tensor} containing the user defined interval.
---
reshape:

Reshape a {@link Tensor} without modifying the underlying data.

@remarks
The resultant shape must contain the same number of elements as the base Tensor.

%%static%%@param tensor - {@link Tensor} to reshape
@param shape - The shape of the output {@link Tensor}
